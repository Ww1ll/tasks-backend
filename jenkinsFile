pipeline {
    agent any
    stages {
        stage ('Build Backend') {
            steps {
                bat 'mvn clean package -DskipTest=true'
            }
        }
        stage ('Unit Tests') {
            steps {
                bat 'mvn test'
            }
        }
        stage ('Sonar Analysis') {
            environment {
                scannerHome = tool 'SONAR_SCANNER'
                jdkHome= tool 'JAVA_8'
            }
            steps {
                withSonarQubeEnv('SONAR_LOCAL'){
                     bat """
                set JAVA_HOME=${jdkHome}
                set PATH=%JAVA_HOME%\\bin;%PATH%
                "${scannerHome}\\bin\\sonar-scanner.bat" ^
                  -Dsonar.projectKey=DeployBack ^
                  -Dsonar.host.url=http://localhost:9000 ^
                  -Dsonar.login=38527751b705aa47fa4b6fcdfab6925df2f3fd08 ^
                  -Dsonar.java.binaries=target ^
                  -Dsonar.coverage.exclusions=**/.mvn/**,**/src/test/**,**/model/**,**Application.java
            """
                }

            }
        }
        stage ('Quality Gate') {
            steps {
                sleep(300)
                timeout(time: 5, unit: 'MINUTES'){
                waitForQualityGate abortPipeline: true
                }
            }
        }
        stage ('Deploy Backend') {
            steps {
                deploy adapters: [tomcat8(alternativeDeploymentContext: '', credentialsId: 'TomcatLogin', path: '', url: 'http://localhost:8082/')], contextPath: 'tasks-backend', war: 'target/tasks-backend.war'
            }
        }

        stage ('API Test') {
            steps {
                dir('api-test'){
                git branch: 'main', credentialsId: 'Login_Github', url: 'https://github.com/Ww1ll/tasks-api.test'
                bat 'mvn -f api-test/pom.xml clean test'
                }
            }
        }

        stage ('Deploy Frontend') {
            steps {
                dir('tasks-frontend'){
                    git branch: 'master', credentialsId: 'Login_Github', url: 'https://github.com/Ww1ll/tasks-frontend'
                    bat 'mvn clean package'
                    deploy adapters: [tomcat8(alternativeDeploymentContext: '', credentialsId: 'TomcatLogin', path: '', url: 'http://localhost:8082/')], contextPath: 'tasks', war: 'target/tasks.war'
                }
            }
        }
         stage ('Functional Test') {
            steps {
                dir('functional-test'){
                git branch: 'main', credentialsId: 'Login_Github', url: 'https://github.com/Ww1ll/tasks-front.tests'
                bat 'mvn -f api-test/pom.xml clean test'
                }
            }
        }

    }

}


